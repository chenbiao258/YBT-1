<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sinosoft.service.business.db.dao.TaxrevenueVoMapper" >
  <resultMap id="BaseResultMap" type="com.sinosoft.service.business.db.vo.TaxrevenueVo" >
    <id column="TRANSNO" property="transno" jdbcType="VARCHAR" />
    <result column="RESIDENTCOUNTRY" property="residentcountry" jdbcType="VARCHAR" />
    <result column="RESIDENTNUMBER" property="residentnumber" jdbcType="VARCHAR" />
    <result column="RESIDENTDESC" property="residentdesc" jdbcType="VARCHAR" />
    <result column="BAK1" property="bak1" jdbcType="VARCHAR" />
    <result column="BAK2" property="bak2" jdbcType="VARCHAR" />
    <result column="BAK3" property="bak3" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    TRANSNO, RESIDENTCOUNTRY, RESIDENTNUMBER, RESIDENTDESC, BAK1, BAK2, BAK3
  </sql>
  <select id="selectByPrimaryKey" resultType="com.sinosoft.service.business.db.vo.TaxrevenueVo" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TAXREVENUE
    where TRANSNO = #{transno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TAXREVENUE
    where TRANSNO = #{transno,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sinosoft.service.business.db.vo.TaxrevenueVo" >
    insert into TAXREVENUE (TRANSNO, RESIDENTCOUNTRY, RESIDENTNUMBER, 
      RESIDENTDESC, BAK1, BAK2, 
      BAK3)
    values (#{transno,jdbcType=VARCHAR}, #{residentcountry,jdbcType=VARCHAR}, #{residentnumber,jdbcType=VARCHAR}, 
      #{residentdesc,jdbcType=VARCHAR}, #{bak1,jdbcType=VARCHAR}, #{bak2,jdbcType=VARCHAR}, 
      #{bak3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sinosoft.service.business.db.vo.TaxrevenueVo" >
    insert into TAXREVENUE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transno != null" >
        TRANSNO,
      </if>
      <if test="residentcountry != null" >
        RESIDENTCOUNTRY,
      </if>
      <if test="residentnumber != null" >
        RESIDENTNUMBER,
      </if>
      <if test="residentdesc != null" >
        RESIDENTDESC,
      </if>
      <if test="bak1 != null" >
        BAK1,
      </if>
      <if test="bak2 != null" >
        BAK2,
      </if>
      <if test="bak3 != null" >
        BAK3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transno != null" >
        #{transno,jdbcType=VARCHAR},
      </if>
      <if test="residentcountry != null" >
        #{residentcountry,jdbcType=VARCHAR},
      </if>
      <if test="residentnumber != null" >
        #{residentnumber,jdbcType=VARCHAR},
      </if>
      <if test="residentdesc != null" >
        #{residentdesc,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null" >
        #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        #{bak3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinosoft.service.business.db.vo.TaxrevenueVo" >
    update TAXREVENUE
    <set >
      <if test="residentcountry != null" >
        RESIDENTCOUNTRY = #{residentcountry,jdbcType=VARCHAR},
      </if>
      <if test="residentnumber != null" >
        RESIDENTNUMBER = #{residentnumber,jdbcType=VARCHAR},
      </if>
      <if test="residentdesc != null" >
        RESIDENTDESC = #{residentdesc,jdbcType=VARCHAR},
      </if>
      <if test="bak1 != null" >
        BAK1 = #{bak1,jdbcType=VARCHAR},
      </if>
      <if test="bak2 != null" >
        BAK2 = #{bak2,jdbcType=VARCHAR},
      </if>
      <if test="bak3 != null" >
        BAK3 = #{bak3,jdbcType=VARCHAR},
      </if>
    </set>
    where TRANSNO = #{transno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinosoft.service.business.db.vo.TaxrevenueVo" >
    update TAXREVENUE
    set RESIDENTCOUNTRY = #{residentcountry,jdbcType=VARCHAR},
      RESIDENTNUMBER = #{residentnumber,jdbcType=VARCHAR},
      RESIDENTDESC = #{residentdesc,jdbcType=VARCHAR},
      BAK1 = #{bak1,jdbcType=VARCHAR},
      BAK2 = #{bak2,jdbcType=VARCHAR},
      BAK3 = #{bak3,jdbcType=VARCHAR}
    where TRANSNO = #{transno,jdbcType=VARCHAR}
  </update>
</mapper>